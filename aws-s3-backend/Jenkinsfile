pipeline {

    parameters {
        string(name: 'region', defaultValue: 'ap-south-1', description: 'select region to deployment')
        string(name: 'env', defaultValue: 'dev', description: 'select environment to deployment')
        string(name: 'service', defaultValue: 'apache', description: 'please provide service name')
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    }

    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }

    agent  any
    stages {
        stage('checkout') {
            steps {
                  git branch: "main", url: "https://github.com/vaibhavsarvaiya10/devops-projects.git"
                  }
            }

        stage('Plan') {
            steps {
                sh '''
                    cd aws-s3-backend;
                    /var/lib/jenkins/terraform init 
                    /var/lib/jenkins/terraform plan -var region=${region} -out tfplan -lock=true;
                    /var/lib/jenkins/terraform show -no-color tfplan > tfplan.txt;
                '''
            }
        }
        stage('Approval') {
            when {
                not {
                  equals expected: true, actual: params.autoApprove
                }
            }

            steps {
                script {
                    def plan = readFile 'aws-s3-backend/tfplan.txt'
                    input message: "Do you want to apply the plan?",
                    parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
                }
            }
        }

        stage('Apply') {
            steps {
                sh "cd aws-s3-backend; /var/lib/jenkins/terraform apply -input=false tfplan"
            }
        } 
    }
}
