pipeline {
    parameters {
        string(name: 'environment', defaultValue: 'dev', description: 'Workspace/environment file to use for deployment')
        booleanParam(name: 'autoApprove', defaultValue: false, description: 'Automatically run apply after generating plan?')
    }
    environment {
        AWS_ACCESS_KEY_ID     = credentials('AWS_ACCESS_KEY_ID')
        AWS_SECRET_ACCESS_KEY = credentials('AWS_SECRET_ACCESS_KEY')
    }
    agent any
    stages {
        stage('checkout') {
            steps {
                 script{
                        dir("terraform")
                        {
                            git branch: "main", url: "https://github.com/vaibhavsarvaiya10/devops-projects.git"
                        }
                    }
                }
            }
        stage('Plan') {
            steps {
                sh '''pwd
                cd terraform/aws-instance-first-project
                /var/lib/jenkins/terraform init -input=false
                /var/lib/jenkins/terraform workspace new ${environment}
                /var/lib/jenkins/terraform workspace select ${environment}
                /var/lib/jenkins/terraform plan -input=false -out tfplan
                /var/lib/jenkins/terraform show -no-color tfplan > tfplan.txt'''
            }
        }
        stage('Approval') {
            when {
                not {
                    equals expected: true, actual: params.autoApprove
                }
            }
            steps {
                script {
                    def plan = readFile 'terraform/aws-instance-first-project/tfplan.txt'
                    input message: "Do you want to apply the plan?",
                    parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]
                }
            }
        }
        stage('Apply') {
            steps {
                sh "pwd; cd terraform/aws-instance-first-project; /var/lib/jenkins/terraform apply -input=false tfplan"
            }
        }
    }
}
